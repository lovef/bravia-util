#!/usr/bin/env bash

function usage {
    echo "usage: bravia [<options>] [command]"
}

function help {
    usage
    echo "
Utility for controlling a Bravia TV via REST
https://pro-bravia.sony.net/develop/integrate/rest-api/spec/index.html
Based on https://github.com/alanreid/bravia

Run without options to turn on and selecting preset input

Options:

    -h, --help                      Show this help text
    -i, --input                     List inputs
    -i, --input <input URI>         Select preset input
    -t, --toggle                    Toggle to the preset input or turn off depending on current state
        --script                    User will not be promted for further input
    -l, --list                      List commands"
}

expandedArgs=()
while test $# != 0
do
    arg="$1"
    if [[ "$arg" =~ ^-[a-z]{2,}$ ]]; then
        for (( i=1; i<${#arg}; i++ )); do
            expandedArgs+=("-${arg:$i:1}")
        done
    else
        expandedArgs+=("$arg")
    fi
    shift
done

cd "$(dirname "${BASH_SOURCE[0]}")/lib/bravia"
if [[ ! -d config ]]; then
    echo create config dir
    mkdir config
fi

# Commands: https://pro-bravia.sony.net/develop/integrate/ircc-ip/ircc-codes/index.html
commandList=()
for (( i=0; i<${#expandedArgs[@]}; i++ )); do
    arg=${expandedArgs[$i]}
    case "$arg" in
    -h|--help)
        help
        exit 0
        ;;
    -l|--list)
        ./listCommands.py
        exit 0
        ;;
    -i|--input)
        i=$((i + 1))
        uri="${expandedArgs[$i]}"
        if [[ -z $uri ]]; then
            ./input.py
        else
            echo "Preset $uri"
            echo -n "$uri" > config/preset
        fi
        exit 0
        ;;
    -t|--toggle)
        echo "Toggle mode"
        toggle=toggle
        ;;
    --script)
        echo "Script mode"
        script=true
        ;;
    *)
        commandList+=($arg)
        ;;
    esac
done

shouldExit=$(./power.py "$toggle")

if [ "$shouldExit" == true ]; then
    exit 0
fi

if [ "$script" == true ]; then
    echo "Script mode, exit"
    sleep 3
    exit 0
fi

./interactive.py
